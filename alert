library(shiny)
library(shinyalert)
library(DT)

ui <- fluidPage(
  shinyalert::useShinyalert(),
  
  actionButton("action", "Submit"),
  
  dataTableOutput("datatable")
)

server <- function(input, output, session) {
  
  observeEvent(input$action, {
    shinyalert(
      title = 'Test',
      class = 'confirm',
      text = 'Please confirm your submission',
      type = 'warning',
      showCancelButton = TRUE,
      confirmButtonText = 'Confirmed',
      cancelButtonText = 'Cancel',
      callbackR = function(value) {
        if (value) {
          shinyalert("Processing", type = 'info', showConfirmButton = FALSE)
          
          # Simulate loading time
          Sys.sleep(3)
          
          # Update the datatableOutput with new data
          newData <- data.frame(
            Name = c("John", "Jane", "Sam"),
            Age = c(25, 32, 40),
            stringsAsFactors = FALSE
          )
          
          output$datatable <- renderDataTable({
            newData
          })
          
          shinyalert("Success", type = 'success')
        } else {
          shinyalert('Submission canceled', type = 'info')
        }
      }
    )
  })
  
  output$datatable <- renderDataTable({
    data.frame()
  })
}

shinyApp(ui, server)
