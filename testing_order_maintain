library(shiny)

# UI
ui <- fluidPage(
  checkboxGroupInput(
    "selected_components",
    "Select components:",
    choices = c("Component 1", "Component 2", "Component 3")
  ),
  
  uiOutput("dynamic_components")
)

# Server
server <- function(input, output, session) {
  # Create an empty list to store the components
  components <- list()
  
  observeEvent(input$selected_components, {
    # Get the newly selected and deselected components
    selected <- input$selected_components
    
    # Iterate over the selected components and create pickerInputs
    components <- lapply(selected, function(comp) {
      pickerInput(
        paste0("select_", comp),
        label = comp,
        choices = NULL
      )
    })
    
    # Update the UI
    output$dynamic_components <- renderUI({
      tagList(components)
    })
  })
  
  observe({
    # Update choices for the pickerInputs based on the selected components
    selected <- input$selected_components
    for (comp in selected) {
      id <- paste0("select_", comp)
      
      # Update choices for the pickerInput based on comp
      updatePickerInput(session, id, choices = c("Choice 1", "Choice 2", "Choice 3"))
    }
  })
}

# Run the Shiny app
shinyApp(ui, server)
