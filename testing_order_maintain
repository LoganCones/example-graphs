library(shiny)

# Sample dataset
dataset <- data.frame(
  col1 = 1:5,
  col2 = letters[1:5],
  col3 = LETTERS[1:5],
  col4 = rnorm(5),
  col5 = runif(5),
  col6 = c(TRUE, FALSE, TRUE, FALSE, TRUE),
  col7 = factor(c("A", "B", "A", "B", "A")),
  col8 = as.Date("2022-01-01") + 0:4
)

# UI
ui <- fluidPage(
  checkboxGroupInput("selected_columns", "Select columns:", choices = colnames(dataset)),
  uiOutput("dynamic_inputs"),
  verbatimTextOutput("selection_text")
)

# Server
# Server
server <- function(input, output) {
  # Create a reactive value to store the selected columns in order
  selected_columns <- reactiveValues(order = character(0))
  
  # Update the selected_columns reactive value when checkbox selection changes
  observeEvent(input$selected_columns, {
    selected_columns$order <- input$selected_columns
  })
  
  # Generate dynamic pickerInputs based on selected columns
  observe({
    selected <- selected_columns$order
    
    # Filter the dataset based on selected columns
    selected_dataset <- dataset[, selected, drop = FALSE]
    
    # Create dynamic inputs and their corresponding 'and/or/end' inputs
    dynamic_inputs <- lapply(selected, function(col) {
      column_input <- column(
        6,
        pickerInput(inputId = col, label = col, choices = unique(selected_dataset[[col]]))
      )
      
      aoe_input <- column(
        6,
        pickerInput(inputId = paste0(col, "_aoe"), label = "AOE", choices = c("and", "or", "end"))
      )
      
      fluidRow(column_input, aoe_input)
    })
    
    # Update the UI with dynamic inputs
    output$dynamic_inputs <- renderUI({
      tagList(dynamic_inputs)
    })
  })
  
  # Generate text output describing user selections
  output$selection_text <- renderText({
    selected_columns <- selected_columns$order
    
    if (length(selected_columns) > 0) {
      text <- paste("You have selected the following columns:")
      
      for (col in selected_columns) {
        values <- input[[col]]
        col_text <- paste("Column", col, "with these values:", paste(values, collapse = ", "))
        text <- paste(text, col_text)
      }
      
      text
    } else {
      "No columns selected."
    }
  })
}
