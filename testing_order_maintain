library(shiny)

# UI
ui <- fluidPage(
  checkboxGroupInput(
    "selected_components",
    "Select components:",
    choices = c("Component 1", "Component 2", "Component 3")
  ),
  
  uiOutput("dynamic_components")
)

# Server
server <- function(input, output, session) {
  # Create a reactiveValues object to store the selected components and their order
  selected_components <- reactiveValues(order = NULL, components = NULL)
  
  observeEvent(input$selected_components, {
    # Get the newly selected and deselected components
    newly_selected <- setdiff(input$selected_components, selected_components$order)
    deselected <- setdiff(selected_components$order, input$selected_components)
    
    # Remove the deselected components from the order and components
    selected_components$order <- setdiff(selected_components$order, deselected)
    selected_components$components <- selected_components$components[!names(selected_components$components) %in% deselected]
    
    # Append the newly selected components to the existing order
    selected_components$order <- c(selected_components$order, newly_selected)
    
    # Update the UI
    output$dynamic_components <- renderUI({
      if (length(selected_components$order) > 0) {
        tagList(
          lapply(selected_components$order, function(comp) {
            fluidRow(
              column(12, h4(comp)),
              column(12, pickerInput(
                paste0("select_", comp),
                label = "Select:",
                choices = NULL
              ))
            )
          })
        )
      } else {
        NULL  # If no components are selected, return NULL
      }
    })
  })
  
  # Sample reactive expressions to update choices for each pickerInput
  observe({
    for (comp in selected_components$order) {
      id <- paste0("select_", comp)
      
      # Update choices for the pickerInput based on comp
      updatePickerInput(session, id, choices = c("Choice 1", "Choice 2", "Choice 3"))
    }
  })
  
  # Reset selected_components if no components are selected
  observeEvent(input$selected_components, {
    if (length(input$selected_components) == 0) {
      selected_components$order <- NULL
      selected_components$components <- NULL
    }
  })
}

# Run the Shiny app
shinyApp(ui, server)
